<% layout("layouts/boilerplate") %>

<style>
  /* Custom spacing for favorite listings grid */
  .favorites-grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 25px;
    padding: 20px 0;
  }
  
  /* Responsive adjustments */
  @media (max-width: 1200px) {
    .favorites-grid {
      grid-template-columns: repeat(3, 1fr);
    }
  }
  
  @media (max-width: 992px) {
    .favorites-grid {
      grid-template-columns: repeat(2, 1fr);
      gap: 20px;
    }
  }
  
  @media (max-width: 576px) {
    .favorites-grid {
      grid-template-columns: 1fr;
      gap: 13px;
    }
  }
  
  /* Card styling */
  .favorite-card {
    border-radius: 18px;
    overflow: hidden;
    box-shadow: 0 6px 18px rgba(0, 0, 0, 0.08);
    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    background: white;
    position: relative;
  }
  
  .favorite-card:hover {
    transform: translateY(-8px);
    box-shadow: 0 12px 28px rgba(0, 0, 0, 0.12);
  }
  
  .favorite-card-img-container {
    position: relative;
    overflow: hidden;
    border-radius: 18px 18px 0 0;
  }
  
  .favorite-card-img {
    width: 100%;
    height: 160px;
    object-fit: cover;
    transition: transform 0.5s ease;
  }
  
  .favorite-card:hover .favorite-card-img {
    transform: scale(1.05);
  }
  
  .favorite-card-body {
    padding: 18px;
    background: linear-gradient(to bottom, #ffffff, #f9f9f9);
  }
  
  .favorite-card-title {
    font-weight: 600;
    font-size: 1.1rem;
    color: #2d3748;
    margin-bottom: 8px;
    transition: color 0.3s ease;
  }
  
  .favorite-card:hover .favorite-card-title {
    color: #4a5568;
  }
  
  .favorite-card-price {
    color: #4a5568;
    font-size: 1rem;
    font-weight: 500;
    display: flex;
    align-items: center;
  }
  
  .favorite-card-price::before {
    content: "•";
    margin: 0 8px;
    color: #cbd5e0;
  }
  
  @keyframes heartBeat {
    0% { transform: scale(1); }
    25% { transform: scale(1.2); }
    50% { transform: scale(0.95); }
    75% { transform: scale(1.1); }
    100% { transform: scale(1); }
  }
  
  /* Empty state styling */
  .empty-favorites {
    background: linear-gradient(135deg, #f6f9fc, #eef2f5);
    border-radius: 18px;
    padding: 40px;
    text-align: center;
    max-width: 600px;
    margin: 0 auto;
    box-shadow: 0 4px 12px rgba(0,0,0,0.05);
  }
  
  .empty-favorites i {
    font-size: 2.5rem;
    color: #fe424d;
    margin-bottom: 20px;
    display: inline-block;
  }
  
  .empty-favorites .alert {
    background: rgba(255, 255, 255, 0.8);
    border: none;
    font-size: 1.1rem;
  }
  
  /* Heading styling */
  .animate-heading {
    font-weight: 700;
    color: #2d3748;
    position: relative;
    display: inline-block;
    margin-bottom: 30px;
  }
  
  .animate-heading::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 60px;
    height: 3px;
    background: linear-gradient(to right, #fe424d, #ff758c);
    border-radius: 3px;
  }
  
  /* Animation for cards */
  .animate-card {
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInUp 0.6s forwards;
  }
  
  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  /* Add delay for each card */
  .favorites-grid .animate-card:nth-child(1) { animation-delay: 0.1s; }
  .favorites-grid .animate-card:nth-child(2) { animation-delay: 0.2s; }
  .favorites-grid .animate-card:nth-child(3) { animation-delay: 0.3s; }
  .favorites-grid .animate-card:nth-child(4) { animation-delay: 0.4s; }
  .favorites-grid .animate-card:nth-child(5) { animation-delay: 0.5s; }
  .favorites-grid .animate-card:nth-child(6) { animation-delay: 0.6s; }
  .favorites-grid .animate-card:nth-child(7) { animation-delay: 0.7s; }
  .favorites-grid .animate-card:nth-child(8) { animation-delay: 0.8s; }
</style>

<div class="container mt-5 mb-5">
  <h2 class="text-center mb-4 animate-heading">❤️ My Favorite Listings</h2>

  <% if (!user.favorites || user.favorites.length === 0) { %>
    <div class="empty-favorites">
      <i class="fa-solid fa-heart-crack"></i>
      <div class="alert alert-warning shadow-sm">
        You have no favorite listings yet. Start adding some!
      </div>
    </div>
  <% } else { %>
    <div class="favorites-grid">
      <% user.favorites.forEach((listing, index) => { %>
        <div class="favorite-card animate-card" style="animation-delay: <%= index * 0.1 %>s">
          <a href="/listings/<%= listing._id %>" class="text-decoration-none text-dark">
            <div class="favorite-card-img-container">
              <img 
                src="<%= listing.image && listing.image.length > 0 ? listing.image[0].url : '/images/default.jpg' %>" 
                alt="<%= listing.title %>" 
                class="favorite-card-img"
              />
              <button 
                class="favorite-btn hearted" 
                data-id="<%= listing._id %>">
                <i class="fa-solid fa-heart"></i>
              </button>
            </div>
            <div class="favorite-card-body">
              <p class="favorite-card-title"><%= listing.title %></p>
              <p class="favorite-card-price">₹ <%= listing.price %> / night</p>
            </div>
          </a>
        </div>
      <% }) %>
    </div>
  <% } %>
</div>

<script>
document.addEventListener('DOMContentLoaded', () => {
  document.querySelectorAll('.favorite-btn').forEach(button => {
    button.addEventListener('click', async (e) => {
      e.preventDefault();
      e.stopPropagation();

      const listingId = button.dataset.id;

      try {
        const res = await fetch(`/listings/${listingId}/favorite`, {
          method: 'POST',
          headers: {
            'Accept': 'application/json'
          }
        });

        if (!res.ok) {
          alert("Please login first to remove favorites");
          return;
        }

        const data = await res.json();

        // If unfavorited, remove from DOM
        if (!data.favorited) {
          const card = button.closest('.favorite-card');
          if (card) {
            card.style.transform = 'scale(0.9)';
            card.style.opacity = '0';
            setTimeout(() => card.remove(), 300);
          }

          // Check if any favorite remains, if not, show message
          if (document.querySelectorAll('.favorite-btn').length === 0) {
            const container = document.querySelector('.container');
            container.innerHTML = `
              <h2 class="text-center mb-4 animate-heading">❤️ Your Favorite Listings</h2>
              <div class="empty-favorites">
                <i class="fa-solid fa-heart-crack"></i>
                <div class="alert alert-warning shadow-sm">
                  You have no favorite listings yet. Start adding some!
                </div>
              </div>
            `;
          }
        }

      } catch (err) {
        console.error("Error removing favorite", err);
      }
    });
  });
});
</script>